S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=5
n2=5
n3=5
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=4
n2=5
n3=6
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n3^2,nrow=n3^2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
Btest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=4
n2=5
n3=6
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=4
n2=5
n3=6
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=4
n2=4
n3=4
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
n1=3
n2=3
n3=3
n=n1*n2*n3
Q=matrix(rnorm(n^2),nrow=n)
Q=svd(Q)
## Sigma=Q$u%*%diag(1+1*runif(n))%*%t(Q$v)
Sigma=Q$u%*%diag(1+10*runif(n))%*%t(Q$u)
Rsigma = rearrange(Sigma,n1*n2)
A <- matrix(rnorm(n3^2), ncol=n3)
A <- A/sqrt(sum(A^2))
B <- kron.inn.prod(Sigma, A)
RB <- rearrange(B,n1)
U = svd(Rsigma)$u
V = svd(Rsigma)$v
S = svd(Rsigma)$d
sig = matrix(0,ncol=n1*n2*n3,nrow=n1*n2*n3)
for (i in c(1:n3^2)){
sig = sig + S[i] * kronecker(matrix(V[,i], ncol=n1*n2), matrix(U[,i], ncol=n3))
}
sum((Sigma - sig)^2)
Btest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
Btest = Btest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * matrix(V[,i], ncol=n1*n2)
}
sum((B - Btest)^2)
RBtest = matrix(0,ncol=n1*n2,nrow=n1*n2)
for (i in c(1:n3^2)){
RBtest = RBtest + S[i] * sum(diag(matrix(U[,i], ncol=n3)%*%t(A))) * rearrange(matrix(V[,i], ncol=n1*n2), n1)
}
sum((RB - RBtest)^2)
rearrange(matrix(V[,1], ncol=n1*n2), n1)$d
svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$d
svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$d
svd(rearrange(matrix(V[,3], ncol=n1*n2), n1))$d
svd(RBtest)$d
svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u
svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u
svd(rearrange(matrix(V[,3], ncol=n1*n2), n1))$u
svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1] %*% t(svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,2])
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,2]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,1]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,3]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,4]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,5]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,6]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,7]
svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$d
svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$d
svd(rearrange(matrix(V[,1], ncol=n1*n2), n1) + rearrange(matrix(V[,2], ncol=n1*n2), n1))$d
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,1]
t(svd(rearrange(matrix(V[,1], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,3], ncol=n1*n2), n1))$u[,1]
t(svd(rearrange(matrix(V[,2], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,3], ncol=n1*n2), n1))$u[,1]
t(svd(rearrange(matrix(V[,3], ncol=n1*n2), n1))$u[,1]) %*% svd(rearrange(matrix(V[,4], ncol=n1*n2), n1))$u[,1]
