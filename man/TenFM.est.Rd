% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tenFM.R
\name{tenFM.est}
\alias{tenFM.est}
\title{Tensor factor estimation method}
\usage{
tenFM.est(x,r,method='TIPUP')
}
\arguments{
\item{x}{\eqn{T \times d_1 \times \cdots \times d_K} dimensional tensor-valued time series}

\item{r}{input rank of factor tensor}

\item{h0}{lag number}

\item{method}{character string, specifying the type of the estimation method to be used. \describe{
 \item{\code{"TIPUP",}}{TIPUP method}
 \item{\code{"TOPUP",}}{TOPUP method}
}}

\item{iter}{boolean, specifying using an iterative approach or an non-iterative approach}

\item{vmax}{boolean, specifying using varimax rotation on the factor matrix or not}

\item{tol}{tolerance for each iteration}

\item{maxiter}{integer, the max number of iterations allowed}

\item{dim}{dimension of coefficient matrices}
}
\value{
return a list containing the following:\describe{
\item{\code{Ft}}{estimated factor matrices of dimension \eqn{T*r_1*r_2 *\cdots *r_k}}
\item{\code{Ft.all}}{Summation of factor matrices over time, dimension \eqn{r_1,r_2,\cdots,r_k} }
\item{\code{Q}}{loading matrices}
\item{\code{x.hat}}{fitted signal part}
\item{\code{niter}}{number of iterations}
\item{\code{fnorm.resid}}{Frobenius norm of residual, divide the Frobenius norm of the original tensor}
}
}
\description{
Estimation function for tensor-valued time series factor model.
}
\examples{
dims <- c(4,5,6) # dimensions of tensor time series
t <- 50
r <- c(2,2,2)  # dimensions of factor series
x = tenFM.sim(dims,array(c(runif(prod(r)),min=0.5,max=1),r),t)  # generate t*dims tensor
Et <- array(rnorm(t*prod(dims)),c(t,dims)) # add some iid noise to the tensor time series
x = x + Et
result <- tenFM.est(x,r,method='TOPUP')  # Estimation
Ft <- result$Ft
}
